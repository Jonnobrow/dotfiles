# Global Options ##################################################################################

directory: /media/music # Destination.
library: /media/music/beets.db # Database
  #
# List of useful plugins.
# Commented out (#) plugins are not in use yet.

plugins:
  [
  bucket,          # Groups your files into buckets folders representing ranges.
  chroma,          # Chromaprint/Acoustid Plugin.
  check,           # Add checksum automatically.
  copyartifacts,   # A plugin that moves non-music files during the import process.
  duplicates,      # Adds a new command, duplicates or dup, which finds and lists duplicate tracks or albums in your collection.
  embedart,        # Embed the album art directly into each file’s metadata.
  fetchart,        # Retrieves album art images from various sources on the Web and stores them as image files.
  follow,          # Get notifications about new releases from album artists in your Beets library using muspy.
  fromfilename,    # The FromFilename plugin adds the ability to guess tags from the filenames.
                   # Use this plugin if your tracks have useful names (like “03 Call Me Maybe.mp3”) but their tags don’t reflect that.
  importadded,     # Useful when an existing collection is imported and the time when albums and items were added should be preserved.
  info,            # The info plugin provides a command that dumps the current tag values for any file format supported by beets.
  lyrics,          # Fetches and stores song lyrics from databases on the Web.
  replaygain,      # This plugin adds support for ReplayGain, a technique for normalizing audio playback levels.
  unimported       # Allows to list all files in the library folder which are not listed in the beets library database, including art files.
  ]


original_date: yes           # Use the original date for the release.
per_disc_numbering: yes      # The track numbers are incremented throughout a multi disk release.
threaded: yes                # Indicating whether the autotagger should use multiple threads.
                             # This makes things substantially faster by overlapping work.

###################################################################################################


# Paths ###########################################################################################

asciify_path: yes            # Convert all non-ASCII characters in paths to ASCII equivalents.
clutter:                     # When beets imports all the files in a directory, it tries to remove the directory if it’s empty.
                             # A directory is considered empty if it only contains files whose names match the glob patterns in clutter,
                             # which should be a list of strings.
                             # The importer only removes recursively searched subdirectories—the top-level directory you specify on the command line is never deleted.
  [
  .DS_Store,                 # Default.
  Thumbs.DB                  # Default.
  ]

bucket:
  bucket_alpha_regex:
    [A-Z]                    # Create folders with the first letters of the band names.

paths:                       # Directory and naming scheme.
                             # The aunique{} function ensures that identically-named albums are placed in different directories.
  default: %bucket{$artist,alpha}/$albumartist/$album%aunique{}/$track $title
  singleton: %bucket{$artist,alpha}/$artist/Non-Album/$title
  albumtype:soundtrack: Soundtracks/$album%aunique{}/$track $title
  comp: Compilations/$album%aunique{}/$track $title
  
  # copyartifacts ###############################
  ext:jpg: $albumpath/scans/cover
  ext:png: $albumpath/scans/cover
  ext:pdf: $albumpath/scans/booklet
  ###############################################

max_filename_length: 255     # 0 = unlimited.

##################################################################################################


# Import ##########################################################################################

import:                      # Beets can move or copy files but it doesn’t make sense to do both).
  write: yes                 # Controlling whether metadata (e.g., ID3) tags are written to files when using beet import.
  #copy: yes                 # Keep your current directory structure.
                             # The option is ignored if move is enabled (i.e., beets can move or copy files but it doesn’t make sense to do both).
  move: yes                  # Move the files. Otherwise there will be duplicates.
  resume: yes                #  Controls whether interrupted imports should be resumed.
                             # “Yes” means that imports are always resumed when possible;
                             # “no” means resuming is disabled entirely;
                             # “ask” (the default) means that the user should be prompted when resuming is possible.
  incremental: no            # Don't record imported directories.
  incremental_skip_later: no # Controlling whether imported directories are recorded and whether these recorded directories are skipped.
  from_scratch: no           # Controlling whether existing metadata is discarded when a match is applied.
  quiet_fallback: skip       # Either skip (default) or asis, specifying what should happen in quiet mode when there is no strong recommendation.
  none_rec_action: ask       # Either ask (default), asis or skip.
                             # Specifies what should happen during an interactive import session when there is no recommendation.
                             # Useful when you are only interested in processing medium and strong recommendations interactively.
  timid: no                  # Controlling whether the importer runs in timid mode,
                             # in which it asks for confirmation on every autotagging match, even the ones that seem very close.
  log: /media/music/beets.log
  default_action: apply      # One of apply, skip, asis, or none, indicating which option should be the default when selecting an action for a given match.
                             # This is the action that will be taken when you type return without an option letter.
  languages: en de           # Prefer transliterated English names.
  detail: no                 # Whether the importer UI should show detailed information about each match it finds.
                             # When enabled, this mode prints out the title of every track, regardless of whether it matches the original metadata.
                             # The default behavior only shows changes. Default: no.
  group_albums: no             # By default, the beets importer groups tracks into albums based on the directories they reside in.
                             # This option instead uses files’ metadata to partition albums.
                             # Enable this option if you have directories that contain tracks from many albums mixed together.
  autotag: yes               # If most of your collection consists of obscure music,
                             # you may be interested in disabling autotagging by setting this option to no.
  duplicate_action: ask      # Either skip, keep, remove, merge or ask. Controls how duplicates are treated in import task.
                             # “skip” means that new item (album or track) will be skipped;
                             # “keep” means keep both old and new items;
                             # “remove” means remove old item;
                             # “merge” means merge into one album;
                             # “ask” means the user should be prompted for the action each time.
  bell: yes                  # Ring the terminal bell to get your attention when the importer needs your input.

importadded:
  preserve_mtimes: no        # After importing files, re-set their mtimes to their original value. Default: no.
  preserve_write_mtimes: no  # After writing files, re-set their mtimes to their original value. Default: no.

###################################################################################################


match:
  preferred:
    media: ['Digital Media|File', 'Digital Media'] # Priorize digital media.
    countries: ['DE', 'XW', 'US', 'GB|UK']

  strong_rec_thresh: 0.10    # Reflects the distance threshold below which beets will make a “strong recommendation” that the metadata be used.
                             # Strong recommendations are accepted automatically (except in “timid” mode),
                             # so you can use this to make beets ask your opinion more or less often.
                             # The threshold is a distance value between 0.0 and 1.0, so you can think of it as the opposite of a similarity value.
                             # For example, if you want to automatically accept any matches above 90% similarity, use: "strong_rec_thresh: 0.10"
                             # The default strong recommendation threshold is 0.04.
                             # When a match is below the medium recommendation threshold
                             # or the distance between it and the next-best match is above the gap threshold,
                             # the importer will suggest that match but not automatically confirm it.
                             # Otherwise, you’ll see a list of options to choose from.

  medium_rec_thresh: 0.125   # The medium_rec_thresh and rec_gap_thresh options work similarly.

# Lyrics ##########################################################################################

lyrics:
  auto: yes                  # Fetch lyrics automatically during import. Default: yes.
  fallback: None             # By default, the file will be left unchanged when no lyrics are found.
                             # Use the empty string '' to reset the lyrics in such a case.
                             # Default: None.
  force: no                  # By default, beets won’t fetch lyrics if the files already have ones.
                             # To instead always fetch lyrics, set the force option to yes.
                             # Default: no.
  sources:                   # List of sources to search for lyrics.
                             # An asterisk * expands to all available sources.
                             # Both it and the genius source will only be enabled if BeautifulSoup is installed.
    - genius
    - lyricwiki
###################################################################################################


# Pictures ########################################################################################

# In Roon, all the images embedded in the file tags, are stored next to the audio files or
# stored in a folder called artwork or scans next to the files are displayed.
# This includes all images that include cover, front or folder.

art_filename: cover          # When importing album art, the name of the file (without extension) where the cover art image should be placed.
                             # This is a template string, so you can use any of the syntax available to Path Formats.

copyartifacts:
    extensions: .jpg .pdf .png
    print_ignored: yes

fetchart:
  auto: yes                  # Enable automatic album art fetching during import.
  cautious: no               # Pick only trusted album art by ignoring filenames that do not contain one of the keywords in "cover_names".
  enforce_ratio: yes         # Only allow images with 1:1 aspect ratio
  minwidth: 1000             # Only images with a width bigger or equal to minwidth are considered as valid album art candidates.
  maxwidth: 3000             # A maximum image width to downscale fetched images if they are too big.
                             # The height is recomputed so that the aspect ratio is preserved.
  sources:                   # An asterisk * expands to all available sources.
    - filesystem             # No remote art sources are queried if local art is found in the filesystem.
    - coverart
    - albumart
    - bandcamp
  store_source: yes          # Store the art source (e.g. filesystem) in the beets database as art_source.

embedart:
  auto: no                   # Enable automatic album art embedding.
  compare_threshold: 50      # A threshold of 0 (the default) disables similarity checking and always embeds new images.
                             # Recommended between 10 and 100.
                             # The smaller the threshold number, the more similar the images must be.
  ifempty: yes               # Avoid embedding album art for files that already have art embedded.
  maxwidth: 0                # A maximum width to downscale images before embedding them (the original image file is not altered).
                             # The resize operation reduces image width to at most maxwidth pixels.
                             # The height is recomputed so that the aspect ratio is preserved. See also Image Resizing for further caveats about image resizing.
  remove_art_file: no        # Automatically remove the album art file for the album after it has been embedded.
                             # This option is best used alongside the FetchArt plugin to download art with the purpose
                             # of directly embedding it into the file’s metadata without an “intermediate” album art file.

###################################################################################################


# ReplayGain ######################################################################################

replaygain:
  auto: yes                  # Enable ReplayGain analysis during import. Default: yes.
                             # ReplayGain analysis is not fast, so you may want to disable it during import.
  backend: ffmpeg            # The analysis backend; either gstreamer, command, or audiotools. Default: command.
  overwrite: no              # Re-analyze files that already have ReplayGain tags. Default: no.
  targetlevel: 89            # A number of decibels for the target loudness level. Default: 89.
  per_disc: no               # Calculate album ReplayGain on disc level instead of album level. Default: no.

###################################################################################################


# Maintanance #####################################################################################

duplicates:
  album: no                  # List duplicate albums instead of tracks. Default: no.
  checksum: ffmpeg -i {file} -f crc -
                             # Use an arbitrary command to compute a checksum of items.
                             # This overrides the keys option the first time it is run;
                             # however, because it caches the resulting checksum as flexattrs in the database,
                             # you can use --key=name_of_the_checksumming_program --key=any_other_keys
                             # (or set the keys configuration option) the second time around.
                             # Default: ffmpeg -i {file} -f crc -.
  copy: none                 # A destination base directory into which to copy matched items.
                             # Default: none (disabled).
  count: yes                 # Print a count of duplicate tracks or albums in the format
                             # $albumartist - $album - $title: $count (for tracks)
                             # or
                             # $albumartist - $album: $count (for albums).
                             # Default: no.
  delete: no                 # Removes matched items from the library and from the disk. Default: no
  format: format_item        # A specific format with which to print every track or album.
                             # This uses the same template syntax as beets’ path formats.
                             # The usage is inspired by, and therefore similar to, the list command.
                             # Default: format_item
  full: yes                  # List every track or album that has duplicates, not just the duplicates themselves. Default: no
  keys: [mb_trackid, mb_albumid]
                             # Define in which track or album fields duplicates are to be searched.
                             # By default, the plugin uses the musicbrainz track and album IDs for this purpose.
                             # Using the keys option (as a YAML list in the configuration file,
                             # or as space-delimited strings in the command-line),
                             # you can extend this behavior to consider other attributes.
                             # Default: [mb_trackid, mb_albumid]
  merge: no                  # Merge duplicate items by consolidating tracks and/or metadata where possible.
  move: none                 # A destination base directory into which it will move matched items. Default: none (disabled).
  path: no                   # Output the path instead of metadata when listing duplicates. Default: no.
  strict: no                 # Do not report duplicate matches if some of the attributes are not defined (ie. null or empty). Default: no
  #tag: no                   # A key=value pair.
                             # The plugin will add a new key attribute with value value as a flexattr to the database for duplicate items. Default: no.
  tiebreak: {}               # Dictionary of lists of attributes keyed by items or albums to use when choosing duplicates.
                             # By default, the tie-breaking procedure favors the most complete metadata attribute set.
                             # If you would like to consider the lower bitrates as duplicates, for example, set tiebreak: items: [bitrate].
                             # Default: {}.

check:
  import: yes                # Add checksums for new files during the import process.
                             # This also disables integrity checks on import and will not ask you to skip the import of corrupted files.
  write-check: yes           # Verify checksums before writing files with beet write or beet modify.
  write-update: yes          # Update checksums after writing files with beet write or beet modify.
  convert-update: no         # Update the checksum if a file has been converted with the --keep-new flag.
  threads: 1                 # Threads to compute checksums.

missing:
  #format: $albumartist - $album - $title
                             # A specific format with which to print every track.
                             # This uses the same template syntax as beets’ path formats.
                             # The usage is inspired by, and therefore similar to, the list command.
                             # Default: format_item.
  count: yes                 # Print a count of missing tracks per album, with format defaulting to $albumartist - $album: $missing.
                             # Default: no.
  total: yes                 # Print a single count of missing tracks in all albums.
                             # Default: no.

###################################################################################################

# UI ##############################################################################################

verbose: no

ui:
    color: yes
    colors:
        text_success: green
        text_warning: blue
        text_error: red
        text_highlight: blue
        text_highlight_minor: lightgray
        action_default: darkblue
        action: purple

