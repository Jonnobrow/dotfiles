# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ZSH Opts
SAVEHIST=1000000
HISTSIZE=1000000
HISTFILE="$XDG_DATA_HOME"/zsh/history
HISTORY_IGNORE='(ls|cd|exit|[bf]g|jobs)'

set -o auto_cd
set -o extended_history
set -o share_history
set -o append_history
set -o inc_append_history_time
set -o hist_ignore_all_dups
set -o hist_save_no_dups
set -o hist_reduce_blanks
set -o hist_verify
set -o hist_ignore_space
set +o case_glob

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

zstyle ':completion:*' list-suffixeszstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
autoload -Uz compinit && compinit

# Functions
function source_if_exists() {[[ -s $1 ]] && source $1 }
function alias_if_exists() { command -v $2 > /dev/null && alias $1=$2; }

# Aliases
alias yarn='yarn --use-yarnrc "$XDG_CONFIG_HOME/yarn/config"'
alias ls='exa'
alias ll='exa -lagh'
alias tree='exa -T --git-ignore'
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -i'
alias_if_exists pbcopy wl-copy
alias_if_exists pbpaste wl-paste


# Fuzzy Finding
if command -v brew > /dev/null; then
  if [[ ! "$PATH" == *$(brew --prefix)/opt/fzf/bin* ]]; then
      export PATH="${PATH:+${PATH}:}$(brew --prefix)/opt/fzf/bin"
  fi
  [[ $- == *i* ]] && source_if_exists "$(brew --prefix)/opt/fzf/shell/completion.zsh" 2> /dev/null
  source_if_exists "$(brew --prefix)/opt/fzf/shell/key-bindings.zsh"
else
  [[ $- == *i* ]] && source_if_exists "/usr/share/fzf/shell/completion.zsh" 2> /dev/null
  source_if_exists "/usr/share/fzf/key-bindings.zsh"
fi
export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --ignore-file $XDG_CONFIG_HOME/fd/fd-ignore"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --ignore-file $XDG_CONFIG_HOME/fd/fd-ignore"
export FZF_COMPLETION_OPTS='--border --info=inline'
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Powerlevel10k
source "$HOME/.local/share/zsh/powerlevel10k/powerlevel10k.zsh-theme"

# GCLOUD
source_if_exists "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
source_if_exists "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"

# direnv
if command -v direnv > /dev/null; then
  eval "$(direnv hook zsh)"
fi

# YARN
export PATH="${PATH:+${PATH}:}$(yarn global bin)"

# Bindings
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
source_if_exists "$HOME/.config/zsh/.p10k.zsh"

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/jb/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/home/jb/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/jb/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/jb/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# Get list of gnubin directories
export PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:$PATH"
export PATH="$(brew --prefix)/opt/make/libexec/gnubin:$PATH"
export PATH="$(brew --prefix)/opt/findutils/libexec/gnubin:$PATH"
export PATH="$(brew --prefix)/opt/grep/libexec/gnubin:$PATH"

# Aliases for samlaz
alias samlazdev='samlaz -e skycloud-gtvd-res-sds-dev -r skycloud-az-residentAdmins-dev && export AWS_PROFILE="skycloud-gtvd-res-sds-dev:skycloud-az-residentAdmins-dev" && export AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials'
alias samlazmgmt='samlaz -e skycloud-gtvd-res-sds-mgmt -r skycloud-az-residentAdmins-mgmt && export AWS_PROFILE="skycloud-gtvd-res-sds-mgmt:skycloud-az-residentAdmins-mgmt" && export AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials'
alias samlaznonp='samlaz -e skycloud-sds-res-uk-nonp -r skycloud-az-residentAdmins-nonp && export AWS_PROFILE="skycloud-sds-res-uk-nonp:skycloud-az-residentAdmins-nonp" && export AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials'
alias samlazprod='samlaz -e skycloud-sds-res-uk-prod -r skycloud-az-residentAdmins-prod && export AWS_PROFILE="skycloud-sds-res-uk-prod:skycloud-az-residentAdmins-prod" && export AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials'
