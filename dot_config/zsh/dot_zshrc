# history
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST # expire duplicates first
setopt HIST_IGNORE_DUPS       # do not store duplications
setopt HIST_FIND_NO_DUPS      # ignore duplicates when searching
setopt HIST_REDUCE_BLANKS     # removes blank lines from history
setopt histignorespace        # if a command is prepended with SPC, don't log in HISTFILE

# typing dir name will also cd
setopt autocd

# basic auto/tab complete
autoload -Uz compinit
# case insensitive path-completion
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
zstyle ':completion:*' menu select
zstyle ':completion:*' list-suffixes
zstyle ':completion:*' expand prefix suffix
zmodload zsh/complist
compinit
# vi mode
bindkey -v
export KEYTIMEOUT=1
bindkey -v '^?' backward-delete-char
# enable substring search
zle -N history-substring-search-up
zle -N history-substring-search-down
## vi bindings
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
## arrow keys
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# exa not ls
alias ls="exa"
alias lsd="exa -ls size"
alias tree="exa -T --git-ignore"

# pins
alias pins="paru -Slq | fzf -m --preview 'cat <(paru -Si {1}) <(paru -Fl {1} | awk \"{print \$2}\")' | xargs -ro paru -S"

# vim
alias vi='nvim'
alias vim='nvim'

# Find and Grep
alias find='fd'
alias grep='rg'

# Bat
batshow () {
    # Show older version of file with bat
    # Example: batshow v0.6.0:src/main.rs rs
    args=($(echo "$1" | tr ":" "\n"))
    if [ -z "$2" ]; then
        if [ -z "${args[2]}"]; then
            filename=$(basename -- "${args[1]}")
        else
            filename=$(basename -- "${args[2]}")
        fi
        echo $filename
        ft="${filename##*.}"
        echo $ft
        echo "Detected filetype: $ft"
    else
        ft="$2"
    fi
    git show $1 | bat -l $ft
}

batdiff() {
    git diff --name-only --diff-filter=d $@ | xargs bat --diff
}

battail() {
    # Example: battail /var/log/pacman.log log
    tail -f $1 | bat --paging=never -l $2
}

bfzf() {
    fzf --preview 'bat --color=always --style=numbers --line-range=:500 {}'
}

# ZSH Plugins
source ~/.local/share/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.local/share/zsh/zsh-history-substring-search/zsh-history-substring-search.zsh
source ~/.local/share/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# Chezmoi Completion
if [ -f "$XDG_CONFIG_HOME/zsh/chezmoi.zsh" ]; then
    source "$XDG_CONFIG_HOME/zsh/chezmoi.zsh"
fi

# Starship (Prompt)
eval "$(starship init zsh)"

# nnn
n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}
# Mail and calendar
alias mutt="neomutt"
alias mail="neomutt"
alias cal="khal calendar"
alias cali="ikhal"
alias cpg="$(which advcp) -g"
alias mvg="$(which advmv) -g"

# Kitty
alias ssh="kitty +kitten ssh"
